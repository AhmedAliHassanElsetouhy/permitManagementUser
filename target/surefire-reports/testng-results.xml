<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="14" total="47" passed="32">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="134227" started-at="2019-12-25T15:14:51 EET" finished-at="2019-12-25T15:17:05 EET">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="134227" started-at="2019-12-25T15:14:51 EET" finished-at="2019-12-25T15:17:05 EET">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.LoginTest@1cb44a2f]" name="openLoginFormTest" duration-ms="1454" started-at="2019-12-25T15:16:07 EET" finished-at="2019-12-25T15:16:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:08 EET" finished-at="2019-12-25T15:16:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=LoginTest.openLoginFormTest()[pri:1, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="emptydataLoginFormTest()[pri:2, instance:tests.LoginTest@1cb44a2f]" name="emptydataLoginFormTest" duration-ms="337" started-at="2019-12-25T15:16:08 EET" depends-on-methods="tests.LoginTest.openLoginFormTest" finished-at="2019-12-25T15:16:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptydataLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:08 EET" finished-at="2019-12-25T15:16:08 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptydataLoginFormTest status=SUCCESS method=LoginTest.emptydataLoginFormTest()[pri:2, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="emptyEmailFieldLoginFormTest()[pri:3, instance:tests.LoginTest@1cb44a2f]" name="emptyEmailFieldLoginFormTest" duration-ms="771" started-at="2019-12-25T15:16:08 EET" depends-on-methods="tests.LoginTest.emptydataLoginFormTest" finished-at="2019-12-25T15:16:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyEmailFieldLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:09 EET" finished-at="2019-12-25T15:16:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptyEmailFieldLoginFormTest status=SUCCESS method=LoginTest.emptyEmailFieldLoginFormTest()[pri:3, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="emptyPasswordFieldLoginFormTest()[pri:4, instance:tests.LoginTest@1cb44a2f]" name="emptyPasswordFieldLoginFormTest" duration-ms="1316" started-at="2019-12-25T15:16:09 EET" depends-on-methods="tests.LoginTest.emptyEmailFieldLoginFormTest" finished-at="2019-12-25T15:16:10 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyPasswordFieldLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:10 EET" finished-at="2019-12-25T15:16:10 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptyPasswordFieldLoginFormTest status=SUCCESS method=LoginTest.emptyPasswordFieldLoginFormTest()[pri:4, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLoginFormTest()[pri:5, instance:tests.LoginTest@1cb44a2f]" name="makeLoginFormTest" duration-ms="2498" started-at="2019-12-25T15:16:10 EET" depends-on-methods="tests.LoginTest.emptyPasswordFieldLoginFormTest" finished-at="2019-12-25T15:16:13 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:13 EET" finished-at="2019-12-25T15:16:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLoginFormTest status=SUCCESS method=LoginTest.makeLoginFormTest()[pri:5, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLogoutTest()[pri:6, instance:tests.LoginTest@1cb44a2f]" name="makeLogoutTest" duration-ms="2161" started-at="2019-12-25T15:16:13 EET" depends-on-methods="tests.LoginTest.makeLoginFormTest" finished-at="2019-12-25T15:16:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@1cb44a2f]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:15 EET" finished-at="2019-12-25T15:16:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=SUCCESS method=LoginTest.makeLogoutTest()[pri:6, instance:tests.LoginTest@1cb44a2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.RequestPermitTest">
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.RequestPermitTest@1f75fd1d]" name="openLoginFormTest" duration-ms="868" started-at="2019-12-25T15:17:00 EET" finished-at="2019-12-25T15:17:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="makeLoginFormTest()[pri:2, instance:tests.RequestPermitTest@1f75fd1d]" name="makeLoginFormTest" duration-ms="1073" started-at="2019-12-25T15:17:01 EET" depends-on-methods="tests.RequestPermitTest.openLoginFormTest" finished-at="2019-12-25T15:17:02 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:17:01 EET" finished-at="2019-12-25T15:17:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=RequestPermitTest.openLoginFormTest()[pri:1, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:17:02 EET" finished-at="2019-12-25T15:17:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLoginFormTest status=SUCCESS method=RequestPermitTest.makeLoginFormTest()[pri:2, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="requestPermitTest()[pri:3, instance:tests.RequestPermitTest@1f75fd1d]" name="requestPermitTest" duration-ms="491" started-at="2019-12-25T15:17:02 EET" depends-on-methods="tests.RequestPermitTest.makeLoginFormTest" finished-at="2019-12-25T15:17:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestPermitTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:17:03 EET" finished-at="2019-12-25T15:17:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestPermitTest status=SUCCESS method=RequestPermitTest.requestPermitTest()[pri:3, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="selectPermitTypeTest()[pri:4, instance:tests.RequestPermitTest@1f75fd1d]" name="selectPermitTypeTest" duration-ms="440" started-at="2019-12-25T15:17:03 EET" depends-on-methods="tests.RequestPermitTest.requestPermitTest" finished-at="2019-12-25T15:17:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPermitTypeTest -->
        <test-method status="PASS" signature="exportPermitRequestTest()[pri:5, instance:tests.RequestPermitTest@1f75fd1d]" name="exportPermitRequestTest" duration-ms="1506" started-at="2019-12-25T15:17:03 EET" depends-on-methods="tests.RequestPermitTest.selectPermitTypeTest" finished-at="2019-12-25T15:17:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exportPermitRequestTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:17:03 EET" finished-at="2019-12-25T15:17:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectPermitTypeTest status=SUCCESS method=RequestPermitTest.selectPermitTypeTest()[pri:4, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLogoutTest()[pri:6, instance:tests.RequestPermitTest@1f75fd1d]" name="makeLogoutTest" duration-ms="672" started-at="2019-12-25T15:17:05 EET" depends-on-methods="tests.RequestPermitTest.exportPermitRequestTest" finished-at="2019-12-25T15:17:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:17:05 EET" finished-at="2019-12-25T15:17:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exportPermitRequestTest status=SUCCESS method=RequestPermitTest.exportPermitRequestTest()[pri:5, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RequestPermitTest@1f75fd1d]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:17:05 EET" finished-at="2019-12-25T15:17:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=SUCCESS method=RequestPermitTest.makeLogoutTest()[pri:6, instance:tests.RequestPermitTest@1f75fd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.RequestPermitTest -->
      <class name="tests.RegistrationFormTest">
        <test-method status="PASS" signature="openRegisterFormTest()[pri:1, instance:tests.RegistrationFormTest@2a661215]" name="openRegisterFormTest" duration-ms="1477" started-at="2019-12-25T15:16:22 EET" finished-at="2019-12-25T15:16:23 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openRegisterFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RegistrationFormTest@2a661215]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:23 EET" finished-at="2019-12-25T15:16:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openRegisterFormTest status=SUCCESS method=RegistrationFormTest.openRegisterFormTest()[pri:1, instance:tests.RegistrationFormTest@2a661215] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="submitRegisterFormTest()[pri:2, instance:tests.RegistrationFormTest@2a661215]" name="submitRegisterFormTest" duration-ms="6967" started-at="2019-12-25T15:16:23 EET" depends-on-methods="tests.RegistrationFormTest.openRegisterFormTest" finished-at="2019-12-25T15:16:30 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitRegisterFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RegistrationFormTest@2a661215]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:30 EET" finished-at="2019-12-25T15:16:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitRegisterFormTest status=SUCCESS method=RegistrationFormTest.submitRegisterFormTest()[pri:2, instance:tests.RegistrationFormTest@2a661215] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="FAIL" signature="makeLogoutTest()[pri:3, instance:tests.RegistrationFormTest@2a661215]" name="makeLogoutTest" duration-ms="30053" started-at="2019-12-25T15:16:30 EET" depends-on-methods="tests.RegistrationFormTest.submitRegisterFormTest" finished-at="2019-12-25T15:17:00 EET">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"تسجيل الخروج"}
  (Session info: chrome=79.0.3945.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-IQFTFHJ', ip: '192.168.8.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.88, chrome: {chromedriverVersion: 78.0.3904.105 (60e2d8774a81..., userDataDir: C:\Users\ahmed\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:3163}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 766b4313804e5bcae68b5104805d473e
*** Element info: {Using=link text, value=تسجيل الخروج}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"تسجيل الخروج"}
  (Session info: chrome=79.0.3945.88)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-IQFTFHJ', ip: '192.168.8.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 79.0.3945.88, chrome: {chromedriverVersion: 78.0.3904.105 (60e2d8774a81..., userDataDir: C:\Users\ahmed\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:3163}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 766b4313804e5bcae68b5104805d473e
*** Element info: {Using=link text, value=تسجيل الخروج}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:380)
at org.openqa.selenium.By$ByLinkText.findElement(By.java:220)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at pages.PageBase.clickButton(PageBase.java:48)
at pages.HomePage.logoutFun(HomePage.java:28)
at tests.RegistrationFormTest.makeLogoutTest(RegistrationFormTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.RegistrationFormTest@2a661215]" name="screenshotOnFailure" is-config="true" duration-ms="366" started-at="2019-12-25T15:17:00 EET" finished-at="2019-12-25T15:17:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=FAILURE method=RegistrationFormTest.makeLogoutTest()[pri:3, instance:tests.RegistrationFormTest@2a661215] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.RegistrationFormTest -->
      <class name="tests.PermitManagementListTest">
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.PermitManagementListTest@5fe3b058]" name="openLoginFormTest" duration-ms="1515" started-at="2019-12-25T15:16:15 EET" finished-at="2019-12-25T15:16:17 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.PermitManagementListTest@5fe3b058]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:17 EET" finished-at="2019-12-25T15:16:17 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=PermitManagementListTest.openLoginFormTest()[pri:1, instance:tests.PermitManagementListTest@5fe3b058] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLoginFormTest()[pri:2, instance:tests.PermitManagementListTest@5fe3b058]" name="makeLoginFormTest" duration-ms="1969" started-at="2019-12-25T15:16:17 EET" depends-on-methods="tests.PermitManagementListTest.openLoginFormTest" finished-at="2019-12-25T15:16:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.PermitManagementListTest@5fe3b058]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:19 EET" finished-at="2019-12-25T15:16:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLoginFormTest status=SUCCESS method=PermitManagementListTest.makeLoginFormTest()[pri:2, instance:tests.PermitManagementListTest@5fe3b058] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="openPermitMagementListTest()[pri:3, instance:tests.PermitManagementListTest@5fe3b058]" name="openPermitMagementListTest" duration-ms="1856" started-at="2019-12-25T15:16:19 EET" depends-on-methods="tests.PermitManagementListTest.makeLoginFormTest" finished-at="2019-12-25T15:16:20 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openPermitMagementListTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.PermitManagementListTest@5fe3b058]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:20 EET" finished-at="2019-12-25T15:16:20 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openPermitMagementListTest status=SUCCESS method=PermitManagementListTest.openPermitMagementListTest()[pri:3, instance:tests.PermitManagementListTest@5fe3b058] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLogoutTest()[pri:4, instance:tests.PermitManagementListTest@5fe3b058]" name="makeLogoutTest" duration-ms="1092" started-at="2019-12-25T15:16:20 EET" depends-on-methods="tests.PermitManagementListTest.openPermitMagementListTest" finished-at="2019-12-25T15:16:22 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.PermitManagementListTest@5fe3b058]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:22 EET" finished-at="2019-12-25T15:16:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=SUCCESS method=PermitManagementListTest.makeLogoutTest()[pri:4, instance:tests.PermitManagementListTest@5fe3b058] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.PermitManagementListTest -->
      <class name="tests.ExportRequestPermitTest">
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.ExportRequestPermitTest@2d3b0978]" name="openLoginFormTest" duration-ms="1079" started-at="2019-12-25T15:15:06 EET" finished-at="2019-12-25T15:15:07 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExportRequestPermitTest@2d3b0978]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:15:07 EET" finished-at="2019-12-25T15:15:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=ExportRequestPermitTest.openLoginFormTest()[pri:1, instance:tests.ExportRequestPermitTest@2d3b0978] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLoginFormTest()[pri:2, instance:tests.ExportRequestPermitTest@2d3b0978]" name="makeLoginFormTest" duration-ms="1338" started-at="2019-12-25T15:15:07 EET" depends-on-methods="tests.ExportRequestPermitTest.openLoginFormTest" finished-at="2019-12-25T15:15:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExportRequestPermitTest@2d3b0978]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:09 EET" finished-at="2019-12-25T15:15:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLoginFormTest status=SUCCESS method=ExportRequestPermitTest.makeLoginFormTest()[pri:2, instance:tests.ExportRequestPermitTest@2d3b0978] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="exportPermitRequestTest()[pri:3, instance:tests.ExportRequestPermitTest@2d3b0978]" name="exportPermitRequestTest" duration-ms="2789" started-at="2019-12-25T15:15:09 EET" depends-on-methods="tests.ExportRequestPermitTest.makeLoginFormTest" finished-at="2019-12-25T15:15:11 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exportPermitRequestTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExportRequestPermitTest@2d3b0978]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:11 EET" finished-at="2019-12-25T15:15:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=exportPermitRequestTest status=SUCCESS method=ExportRequestPermitTest.exportPermitRequestTest()[pri:3, instance:tests.ExportRequestPermitTest@2d3b0978] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="validFillExportPermitForm()[pri:9, instance:tests.ExportRequestPermitTest@2d3b0978]" name="validFillExportPermitForm" duration-ms="46790" started-at="2019-12-25T15:15:11 EET" depends-on-methods="tests.ExportRequestPermitTest.exportPermitRequestTest" finished-at="2019-12-25T15:15:58 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFillExportPermitForm -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExportRequestPermitTest@2d3b0978]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:58 EET" finished-at="2019-12-25T15:15:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validFillExportPermitForm status=SUCCESS method=ExportRequestPermitTest.validFillExportPermitForm()[pri:9, instance:tests.ExportRequestPermitTest@2d3b0978] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLogoutTest()[pri:10, instance:tests.ExportRequestPermitTest@2d3b0978]" name="makeLogoutTest" duration-ms="1057" started-at="2019-12-25T15:15:58 EET" depends-on-methods="tests.ExportRequestPermitTest.validFillExportPermitForm" finished-at="2019-12-25T15:15:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExportRequestPermitTest@2d3b0978]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:15:59 EET" finished-at="2019-12-25T15:15:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=SUCCESS method=ExportRequestPermitTest.makeLogoutTest()[pri:10, instance:tests.ExportRequestPermitTest@2d3b0978] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.ExportRequestPermitTest -->
      <class name="tests.ExpiryDatesTest">
        <test-method status="PASS" signature="startDriver(java.lang.String)[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="startDriver" is-config="true" duration-ms="9952" started-at="2019-12-25T15:14:41 EET" finished-at="2019-12-25T15:14:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.ExpiryDatesTest@3f80d8c]" name="openLoginFormTest" duration-ms="11688" started-at="2019-12-25T15:14:51 EET" finished-at="2019-12-25T15:15:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:03 EET" finished-at="2019-12-25T15:15:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=ExpiryDatesTest.openLoginFormTest()[pri:1, instance:tests.ExpiryDatesTest@3f80d8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLoginFormTest()[pri:2, instance:tests.ExpiryDatesTest@3f80d8c]" name="makeLoginFormTest" duration-ms="1594" started-at="2019-12-25T15:15:03 EET" depends-on-methods="tests.ExpiryDatesTest.openLoginFormTest" finished-at="2019-12-25T15:15:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:05 EET" finished-at="2019-12-25T15:15:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLoginFormTest status=SUCCESS method=ExpiryDatesTest.makeLoginFormTest()[pri:2, instance:tests.ExpiryDatesTest@3f80d8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="requestPermitTest()[pri:3, instance:tests.ExpiryDatesTest@3f80d8c]" name="requestPermitTest" duration-ms="817" started-at="2019-12-25T15:15:05 EET" depends-on-methods="tests.ExpiryDatesTest.makeLoginFormTest" finished-at="2019-12-25T15:15:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestPermitTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:15:05 EET" finished-at="2019-12-25T15:15:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestPermitTest status=SUCCESS method=ExpiryDatesTest.requestPermitTest()[pri:3, instance:tests.ExpiryDatesTest@3f80d8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="makeLogoutTest()[pri:4, instance:tests.ExpiryDatesTest@3f80d8c]" name="makeLogoutTest" duration-ms="852" started-at="2019-12-25T15:15:05 EET" depends-on-methods="tests.ExpiryDatesTest.requestPermitTest" finished-at="2019-12-25T15:15:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeLogoutTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:15:06 EET" finished-at="2019-12-25T15:15:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=makeLogoutTest status=SUCCESS method=ExpiryDatesTest.makeLogoutTest()[pri:4, instance:tests.ExpiryDatesTest@3f80d8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="stopDriver()[pri:0, instance:tests.ExpiryDatesTest@3f80d8c]" name="stopDriver" is-config="true" duration-ms="624" started-at="2019-12-25T15:17:06 EET" finished-at="2019-12-25T15:17:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.ExpiryDatesTest -->
      <class name="tests.ForgetPasswordTest">
        <test-method status="PASS" signature="openLoginFormTest()[pri:1, instance:tests.ForgetPasswordTest@5c60c08]" name="openLoginFormTest" duration-ms="1210" started-at="2019-12-25T15:15:59 EET" finished-at="2019-12-25T15:16:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openLoginFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ForgetPasswordTest@5c60c08]" name="screenshotOnFailure" is-config="true" duration-ms="2" started-at="2019-12-25T15:16:01 EET" finished-at="2019-12-25T15:16:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openLoginFormTest status=SUCCESS method=ForgetPasswordTest.openLoginFormTest()[pri:1, instance:tests.ForgetPasswordTest@5c60c08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="openForgetPasswordFormTest()[pri:2, instance:tests.ForgetPasswordTest@5c60c08]" name="openForgetPasswordFormTest" duration-ms="687" started-at="2019-12-25T15:16:01 EET" depends-on-methods="tests.ForgetPasswordTest.openLoginFormTest" finished-at="2019-12-25T15:16:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openForgetPasswordFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ForgetPasswordTest@5c60c08]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:01 EET" finished-at="2019-12-25T15:16:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openForgetPasswordFormTest status=SUCCESS method=ForgetPasswordTest.openForgetPasswordFormTest()[pri:2, instance:tests.ForgetPasswordTest@5c60c08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="emptydataForgetPasswordFormTest()[pri:3, instance:tests.ForgetPasswordTest@5c60c08]" name="emptydataForgetPasswordFormTest" duration-ms="185" started-at="2019-12-25T15:16:01 EET" depends-on-methods="tests.ForgetPasswordTest.openForgetPasswordFormTest" finished-at="2019-12-25T15:16:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptydataForgetPasswordFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ForgetPasswordTest@5c60c08]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:01 EET" finished-at="2019-12-25T15:16:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=emptydataForgetPasswordFormTest status=SUCCESS method=ForgetPasswordTest.emptydataForgetPasswordFormTest()[pri:3, instance:tests.ForgetPasswordTest@5c60c08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="invalidDataForgetPasswordFormTest()[pri:4, instance:tests.ForgetPasswordTest@5c60c08]" name="invalidDataForgetPasswordFormTest" duration-ms="1371" started-at="2019-12-25T15:16:01 EET" depends-on-methods="tests.ForgetPasswordTest.emptydataForgetPasswordFormTest" finished-at="2019-12-25T15:16:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDataForgetPasswordFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ForgetPasswordTest@5c60c08]" name="screenshotOnFailure" is-config="true" duration-ms="1" started-at="2019-12-25T15:16:03 EET" finished-at="2019-12-25T15:16:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidDataForgetPasswordFormTest status=SUCCESS method=ForgetPasswordTest.invalidDataForgetPasswordFormTest()[pri:4, instance:tests.ForgetPasswordTest@5c60c08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
        <test-method status="PASS" signature="forgetPasswordFormTest()[pri:5, instance:tests.ForgetPasswordTest@5c60c08]" name="forgetPasswordFormTest" duration-ms="3805" started-at="2019-12-25T15:16:03 EET" depends-on-methods="tests.ForgetPasswordTest.invalidDataForgetPasswordFormTest" finished-at="2019-12-25T15:16:07 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetPasswordFormTest -->
        <test-method status="PASS" signature="screenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.ForgetPasswordTest@5c60c08]" name="screenshotOnFailure" is-config="true" duration-ms="0" started-at="2019-12-25T15:16:07 EET" finished-at="2019-12-25T15:16:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgetPasswordFormTest status=SUCCESS method=ForgetPasswordTest.forgetPasswordFormTest()[pri:5, instance:tests.ForgetPasswordTest@5c60c08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenshotOnFailure -->
      </class> <!-- tests.ForgetPasswordTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
